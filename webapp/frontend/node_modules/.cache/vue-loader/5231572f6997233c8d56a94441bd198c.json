{"remainingRequest":"/home/klestov/go/src/github.com/MaJloe3Jlo/HLexampleGO/webapp/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/klestov/go/src/github.com/MaJloe3Jlo/HLexampleGO/webapp/frontend/src/components/HelloWorld.vue?vue&type=style&index=0&id=469af010&scoped=true&lang=css&","dependencies":[{"path":"/home/klestov/go/src/github.com/MaJloe3Jlo/HLexampleGO/webapp/frontend/src/components/HelloWorld.vue","mtime":1601911079851},{"path":"/home/klestov/go/src/github.com/MaJloe3Jlo/HLexampleGO/webapp/frontend/node_modules/css-loader/dist/cjs.js","mtime":1601902042000},{"path":"/home/klestov/go/src/github.com/MaJloe3Jlo/HLexampleGO/webapp/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1601902043000},{"path":"/home/klestov/go/src/github.com/MaJloe3Jlo/HLexampleGO/webapp/frontend/node_modules/postcss-loader/src/index.js","mtime":1601902042000},{"path":"/home/klestov/go/src/github.com/MaJloe3Jlo/HLexampleGO/webapp/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1601902042000},{"path":"/home/klestov/go/src/github.com/MaJloe3Jlo/HLexampleGO/webapp/frontend/node_modules/vue-loader/lib/index.js","mtime":1601902043000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmxvYWRlciB7CiAgcG9zaXRpb246IGFic29sdXRlOwogIHdpZHRoOiAxMDAlOwogIGhlaWdodDogMTAwJTsKICB6LWluZGV4OiA5OTk7CiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjg3KTsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgdG9wOiAwOwogIGxlZnQ6IDA7Cn0KLmNvbnRhaW5lciB7CiAgbWF4LXdpZHRoOiAxMjAwcHg7Cn0K"},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-container fluid>\n    <v-snackbar\n      top\n      v-model=\"notification.show\"\n    >\n      {{ notification.msg }}\n    </v-snackbar>\n\n    <v-row>\n      <v-col>\n        <v-card class=\"elevation-12\">\n          <div class=\"loader\" v-if=\"card.isLoading\">\n            <v-progress-circular\n              indeterminate\n              color=\"primary\"\n            ></v-progress-circular>\n          </div>\n          <v-toolbar color=\"primary\" dark flat>\n            <v-toolbar-title>Текущий блок</v-toolbar-title>\n          </v-toolbar>\n          <v-card-text>\n            <v-alert v-if=\"card.error\" type=\"error\" text>\n              {{card.error}}\n            </v-alert>\n            <v-list>\n              <v-list-item>\n                <v-list-item-icon>\n                  <v-icon>mdi-key</v-icon>\n                </v-list-item-icon>\n                <v-list-item-content>\n                  <v-list-item-title>ID: {{ card.model.id || 'пусто' }}</v-list-item-title>\n                </v-list-item-content>\n              </v-list-item>\n              <v-divider></v-divider>\n              <v-list-item>\n                <v-list-item-icon>\n                  <v-icon>mdi-tag-outline</v-icon>\n                </v-list-item-icon>\n                <v-list-item-content>\n                  <v-list-item-title>Название: {{ card.model.name || 'пусто' }}</v-list-item-title>\n                </v-list-item-content>\n              </v-list-item>\n              <v-divider></v-divider>\n              <v-list-item>\n                <v-list-item-icon>\n                  <v-icon>mdi-format-paragraph</v-icon>\n                </v-list-item-icon>\n                <v-list-item-content>\n                  <v-list-item-title>Сумма: {{ card.model.price || 0 }}</v-list-item-title>\n                </v-list-item-content>\n              </v-list-item>\n              <v-divider></v-divider>\n              <v-list-item>\n                <v-list-item-icon>\n                  <v-icon>mdi-zip-box</v-icon>\n                </v-list-item-icon>\n                <v-list-item-content>\n                  <v-list-item-title>Количество {{ card.model.quantity || 0 }}</v-list-item-title>\n                </v-list-item-content>\n              </v-list-item>\n              <v-divider></v-divider>\n            </v-list>\n          </v-card-text>\n          <v-card-actions>\n              <v-spacer />\n              <v-dialog\n                v-model=\"form.isDialog\"\n                width=\"500\"\n              >\n                <template v-slot:activator=\"{ on, attrs }\">\n                  <v-btn\n                    color=\"primary\"\n                    dark\n                    v-bind=\"attrs\"\n                    v-on=\"on\"\n                  >\n                    Изменить\n                  </v-btn>\n                </template>\n\n                <v-card>\n                  <div class=\"loader\" v-if=\"form.isLoading\">\n                    <v-progress-circular\n                      indeterminate\n                      color=\"primary\"\n                    ></v-progress-circular>\n                  </div>\n\n                  <v-card-title class=\"headline grey lighten-2\">\n                    Новый блок\n                  </v-card-title>\n\n                  <v-card-text class=\"mt-5\">\n                    <v-alert v-if=\"form.error\" type=\"error\" text>\n                      {{form.error}}\n                    </v-alert>\n                    <v-form\n                      ref=\"form\"\n                      v-model=\"form.valid\"\n                    >\n                      <v-text-field\n                        v-model=\"form.model.id\"\n                        label=\"ID\"\n                        name=\"id\"\n                        prepend-icon=\"mdi-key\"\n                        type=\"number\"\n                        :rules=\"validator.required\"\n                        required\n                      />                    \n                      <v-text-field\n                        v-model=\"form.model.name\"\n                        label=\"Название\"\n                        name=\"name\"\n                        prepend-icon=\"mdi-tag-outline\"\n                        type=\"text\"\n                        :rules=\"validator.required\"\n                        required\n                      />\n                      <v-text-field\n                        v-model=\"form.model.price\"\n                        label=\"Сумма\"\n                        name=\"price\"\n                        prepend-icon=\"mdi-format-paragraph\"\n                        type=\"number\"\n                        :rules=\"validator.required\"\n                        required\n                      />\n                      <v-text-field\n                        v-model=\"form.model.quantity\"\n                        label=\"Количество\"\n                        name=\"quantity\"\n                        prepend-icon=\"mdi-zip-box\"\n                        type=\"number\"\n                        :rules=\"validator.required\"\n                        required\n                      />\n                    </v-form>\n                  </v-card-text>\n\n                  <v-divider></v-divider>\n\n                  <v-card-actions>\n                    <v-spacer></v-spacer>\n                    <v-btn\n                      color=\"primary\"\n                      @click=\"onSubmit\"\n                    >\n                      Сохранить\n                    </v-btn>\n                  </v-card-actions>\n                </v-card>\n              </v-dialog>\n          </v-card-actions>\n        </v-card>\n      </v-col>\n    </v-row>\n    <v-row>\n      <v-col>\n        <v-card class=\"elevation-12\">\n          <div class=\"loader\" v-if=\"list.isLoading\">\n            <v-progress-circular\n              indeterminate\n              color=\"primary\"\n            ></v-progress-circular>\n          </div>\n          <v-toolbar color=\"primary\" dark flat>\n            <v-toolbar-title>Список блоков</v-toolbar-title>\n          </v-toolbar>\n          <v-card-text>\n            <v-alert v-if=\"list.error\" type=\"error\" text>\n              {{list.error}}\n            </v-alert>\n            <v-simple-table v-if=\"list.data\">\n              <template v-slot:default>\n                <thead>\n                  <tr>\n                    <th class=\"text-left\">\n                      id\n                    </th>\n                    <th class=\"text-left\">\n                      Название\n                    </th>\n                    <th class=\"text-left\">\n                      Сумма\n                    </th>\n                    <th class=\"text-left\">\n                      Количество\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr\n                    v-for=\"item in list.data\"\n                    :key=\"item.id\"\n                  >\n                    <td>{{ item.id }}</td>\n                    <td>{{ item.name }}</td>\n                    <td>{{ item.price }}</td>\n                    <td>{{ item.quantity }}</td>\n                  </tr>\n                </tbody>\n              </template>\n            </v-simple-table>\n            <v-alert v-else class=\"mb-0\" type=\"warning\" text>\n              Нет данных\n            </v-alert>\n          </v-card-text>\n        </v-card>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\n  import api from '@/api';\n\n  const MODEL = {\n    id: '',\n    name: '',\n    price: '',\n    quantity: ''\n  };\n\n  export default {\n    name: 'HelloWorld',\n\n    data() {\n      return {\n        card: {\n          model: this.setModel(),\n          error: '',\n          isLoading: false,\n        },\n        form: {\n          isLoading: false,\n          isDialog: false,\n          error: '',\n          valid: false,\n          model: this.setModel()\n        },\n        list: {\n          data: null,\n          isLoading: false,\n          error: ''\n        },\n        validator: {\n          required: [\n            v => !!v || 'Обязательное поле'\n          ]\n        },\n        notification: {\n          msg: 'Готово',\n          show: false\n        }\n      }\n    },\n\n    methods: {\n      setModel(model) {\n        return Object.assign({}, model || MODEL)\n      },\n\n      find() {\n        this.list.error = '';\n        this.list.isLoading = true;\n        api.list().then(({data}) => {\n          if (data) {\n            this.list.data = data;\n          } else {\n            this.list.error = 'Нет данных'\n          }\n        }, err => {\n          this.card.error = err || 'Ошибка';\n        }).finally(() => {\n         this.list.isLoading = false;\n        });\n      },\n\n      findOne() {\n        this.card.error = '';\n        this.card.isLoading = true;\n        api.get().then(({data}) => {\n          if (data) {\n            this.card.model = this.setModel(data);\n          } else {\n            this.card.error = 'Нет данных'\n          }\n        }, err => {\n          this.card.error = err || 'Ошибка';\n        }).finally(() => {\n         this.card.isLoading = false;\n        });\n      },\n\n      onSubmit() {\n        this.form.error = '';\n        this.$refs.form.validate()\n        if (!this.form.valid) return false;\n\n        this.form.isLoading = true;\n\n        const { id, name, price, quantity } = this.form.model;\n\n        api.save({id: +id, name, price: +price, quantity: +quantity}).then(({data}) => {\n          this.form.isDialog = false;\n          this.form.model = this.setModel();\n          this.notification.msg = 'ID транзации: ' + data;\n          this.notification.show = true;\n          this.findOne();\n          this.find();\n        }, err => {\n          this.form.error = err || 'Ошибка';\n        }).finally(() => {\n          this.form.isLoading = false;\n        });\n      }\n    },\n\n    created() {\n      this.findOne();\n      this.find();\n    }\n  }\n</script>\n\n<style scoped>\n  .loader {\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    z-index: 999;\n    background: rgba(255, 255, 255, 0.87);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    top: 0;\n    left: 0;\n  }\n  .container {\n    max-width: 1200px;\n  }\n</style>"]}]}